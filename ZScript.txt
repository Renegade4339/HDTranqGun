//rocket grenades moment, may change
class DartBase:SlowProjectile{
	bool isrocket;
	string sedativetype;
	stringe sedativedebristype;
	property sedative:sedativetype;
	property sedativedebristype:sedativedebristype;
	default{
		-noextremedeath -noteleport +bloodlessimpact
		height 2; radius 2; scale 0.33;
		speed HDCONST_MPSTODUPT*76;
		mass 150; accuracy 0; woundhealth 0;
		obituary "%o was darted by %k.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_ChangeVelocity(speed*cos(pitch),0,speed*sin(-pitch),CVF_RELATIVE);
	}
	override void ExplodeSlowMissile(line blockingline,actor blockingobject){
		if(max(abs(skypos.x),abs(skypos.y))>=32768){destroy();return;}
		bmissile=false;
	}
	
	action void A_BounceOff(){
			//bounce
			if(speed>50)painsound="misc/punch";else painsound="misc/fragknock";
			actor a=spawn("IdleDummy",pos,ALLOW_REPLACE);
			a.stamina=10;a.A_StartSound(painsound,CHAN_AUTO);
			let ddd=(sedativedebristype.spawn(self.sedativedebristype,pos-(cos(pitch)*(cos(angle),sin(angle)),sin(-pitch))));
			if(ddd){
				ddd.target=target;
				ddd.tracer=tracer;
				ddd.master=master;
				ddd.angle=angle;
				ddd.pitch=pitch;
				ddd.vel=vel*0.3;
			}
			destroy();
			return;
		}
	states{
	spawn:
		TNT1 A 1;
		stop;
	
	spawndart:
		---- A -1;
		stop;
	death:
        ---- A 1{
            if(tracer){
                tracer.damagemobj(self,target,random(1,4),"piercing",DMG_NO_ARMOR);
 		actor a=spawn(self.sedativetype,pos,ALLOW_REPLACE);
		a.accuracy=40;a.target=tracer;
                    }else{
                        A_BounceOff();
            }
        }
	/*
        TNT1 A 1{
            if(random(0,2)){
                let blt=HDSBoltAmmo.spawn("HDSBoltAmmo",pos-(vel*2));
                if(!tracer){
                    blt.bnogravity=true;
                    blt.bflatsprite=true;
                    blt.angle=angle;blt.pitch=pitch;
                }
            }
        }*/
        stop;
	}
}

//the droog
class InjectTranqDummy:IdleDummy{
	hdplayerpawn tg;
	hdmobbase tg2;
	states{
	spawn:
		TNT1 A 30 nodelay{
			tg=HDPlayerPawn(target);
			tg2=HDMobBase(target);
			if(!tg||tg.bkilled||!tg2||tg2.bkilled){destroy();return;}
		}
		TNT1 A 1{
			if(!target||target.bkilled){destroy();return;}
			if(tg)HDF.Give(target,"HDTranq",HDTranq.HDTRANQ_DOSE);
			if(tg2)A_GiveToTarget("HDTranq2",HDTranq.HDTRANQ_DOSE);
		}stop;
	}
class HDTranq : HDDrug{
	enum TranqAmounts{
		HDTRANQ_DOSE=400,
		HDTRANQ_MAX=480,
	}
	override void doeffect(){
		let hdp=hdplayerpawn(owner);

		double ret=min(0.1,amount*0.003);
		if(!deathmatch){
		hdp.A_Incapacitated( 0, 35 );
		hdp.AddBlackout(256,1,1,35);
		}
			if(
				countinv("HDZerk")>HDZerk.HDZERK_COOLOFF
			){
				destroy();
				return;
			}
			if(
				countinv("HDStim")
				||!(level.time&(1|2|4))
			){
				if(hdp.stunned<40)hdp.stunned+=3;
				if(hdp.fatigue<HDCONST_SPRINTFATIGUE)hdp.fatigue++;
				hdp.A_TakeInventory("HDTranq",random(2,6));
			}
	}
	override void OnHeartbeat(hdplayerpawn hdp){
		if(amount<1)return;
		int amt=amount;amount--;
		if(deathmatch){
		if(hdp.stunned<40)hdp.stunned+=3;
		if(hdp.fatigue<HDCONST_SPRINTFATIGUE)hdp.fatigue++;
		}
		if(amt>HDTRANQ_MAX){

			if(hdp.beatcap>max(6,20-(amount>>5)))hdp.beatcap--;

			if(hdp.stunned<10)hdp.stunned+=2;

			if(
				hdp.bloodpressure<50-(hdp.bloodloss>>4)
			)hdp.bloodpressure+=4;

		}else{

			if(hdp.beatcap>30)hdp.beatcap--;

			if(
				hdp.bloodpressure<14-(hdp.bloodloss>>4)
			)hdp.bloodpressure+=3;
		}

		if(hd_debug>=4)console.printf("TRANQ "..amt.."/"..HDTRANQ_MAX.."  = ");
	}
}

//droog, for mobs
class HDTranq2 : Inventory{
	default{
		+inventory.undroppable
		-inventory.invbar
		inventory.maxamount 1000000;
	}
	override void doeffect(){
		let hdmb=hdmobbase(owner);
		let hdp=hdplayerpawn(owner);

		if(hdp){
			int droogs=countinv("HDTranq2");
			hdp.A_GiveInventory("HDTranq",droogs); //failsafe should this be given to players, intentional or not
			destroy();
			return;
		}
			//from melodica's melonades, specifically
			//t h e  r o c k
			//code actually from swampie's LL rounds
			//from the bullet lib 
			if(HDMobBase(owner){
			if(HDMobBase(owner) 
			&& !HDMobBase(owner).bNOINCAP 
			&& hitactor.health>0
			&& hitactor.ResolveState("falldown")
			&& !hitactor.InStateSequence
			(owner.CurState,owner.ResolveState("falldown"))
  				){
				owner.SetStateLabel("falldown");
    				if(HDMobBase(owner).stunned<35)HDMobBase(owner).stunned=35; //nighty night	
   			 }

			if(!(level.time&(1|2|4)))owner.A_TakeInventory("HDTranq",1);

			if(
				countinv("HDTranq")>HDTranq.HDTRANQ_MAX
				||!(level.time&(1|2|4))
			){
				if(HDMobBase(owner).health>0)HDMobBase(owner).stunned+=4;
			}
		}
	}
}
